@using Sandbox
@using Sandbox.UI
@using Sandcube.Interactions
@using Sandcube.Inventories
@using Sandcube.Inventories.Players
@using Sandcube.Items
@using Sandcube.UI.Inventories
@using Sandcube.UI.Menus
@using System
@using System.Linq

@namespace Sandcube.UI.Inventories.Players
@attribute [StyleSheet] // TODO: reuse stylesheet of parent class
@inherits InventoryUI

<root class="inventory-ui">
    @if(Capabilities is not null)
    {
        <div class="capabilities">
            @foreach(var capability in Enumerable.Reverse(Capabilities))
            {
                <ItemCapabilityUI class="capability" Capability=@capability Width=@Width MouseEventListener=@this/>
            }
        </div>
        <ItemStackUI class="stack taken @(TakenStack.IsEmpty ? "hidden" : string.Empty)" Stack=@TakenStack @ref=TakenStackUI/>
    }
</root>

@code
{
    [Property] public PlayerInventory PlayerInventory { get; set; } // TODO: change to IPlayerInventory

    protected override System.Collections.Generic.IEnumerable<IIndexedCapability<Stack<Item>>> Capabilities
        => PlayerInventory is null ? Enumerable.Empty<IIndexedCapability<Stack<Item>>>() :
        new System.Collections.Generic.List<IIndexedCapability<Stack<Item>>>() {
            PlayerInventory.Hotbar,
            PlayerInventory.Main,
            PlayerInventory.SecondaryHand,
        };
    protected override int Width => PlayerInventory?.Hotbar.Size ?? 9;
}
