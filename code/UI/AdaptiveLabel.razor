@using Sandbox;
@using Sandbox.UI;
@using System;


@namespace Sandcube.UI
@inherits Label

<root>
@(Text?.ToString() ?? string.Empty)
</root>

@code
{
    protected virtual void UpdateStyle()
    {
        if(ComputedStyle is null)
            return;

        var fontSize = ComputedStyle.FontSize;
        if(!fontSize.HasValue)
        {
            Log.Warning($"Couldn't find fontSize style for {nameof(AdaptiveLabel)}");
            return;
        }

        if(fontSize.Value.Unit == LengthUnit.Percentage)
        {
            var neededSize = fontSize.Value.Value / 100f * Parent.Box.Rect.Height / FindRootPanel().Scale;
            Style.FontSize = Length.Pixels(neededSize);
        }
    }

    public override void OnLayout(ref Rect layoutRect) => UpdateStyle();

    public override void OnHotloaded()
    {
        base.OnHotloaded();
        UpdateStyle();
    }

    protected override int BuildHash() => HashCode.Combine(ComputedStyle, Text, FindRootPanel().Scale, Parent.Box.Rect.Height);
}